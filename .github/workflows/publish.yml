name: Publish

on:
  push:
    branches:
      - master

jobs:
  check-existing:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: flood-io/is-published-on-npm@v1
        id: is-published
      - name:
        if: ${{ steps.is-published.outputs.published == 'true' }}
        run: exit 1

  publish-bindings:
    needs: check-existing
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-20.04, macos-11, windows-2019]
    env:
      ENIGMA_FORCE_BUILD: "True"
      ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY_ID }}
      SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install dependencies
        run: npm ci
      - name: Publish bindings
        run: |
          npm run binary:pack
          npm run binary:publish
      - name: Publish linux ARM
        if: matrix.os == 'ubuntu-18.04'
        run: |
          npm run cross:armv7
          TARGET_ARCH=arm npm run binary:publish
      - name: Publish linux ARM64
        if: matrix.os == 'ubuntu-18.04'
        run: |
          npm run cross:arm64
          TARGET_ARCH=arm64 npm run binary:publish

  publish-npm:
    needs: publish-bindings
    runs-on: ubuntu-18.04
    env:
      ENIGMA_SKIP_BUILD: "True"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install dependencies
        run: npm ci
      - name: Publish NPM
        run: npm run publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
